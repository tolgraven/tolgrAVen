@use "burger";
@use "peripheral";
@use "header";
@use "footer";
@use "hero";
@use "gallery";
@use "mods";
@use "hljs";
@use "native-inputs";
@use "blog";
@use "user";
@use "strava";
@use "chat";
@use "gpt";
@use "github";
@use "instagram";
@use "cv";
@use "search";
@use "input";
@use "codox";
@use "experiments";
@use "components";
@use "main-page";
@use "vars";
@use "compat";
@use "fonts";
@use "components/error";

/* This keeps child nodes hidden while the element loads */
:not(:defined) > * {
  display: none;
}
 
* {
  box-sizing: border-box; // include border in elem sizing
  margin:  0;
  padding: 0;
}

:target { /* pseudo-el representing a target (link, id/el)... */
  /* does not appear to do the trick tho. wait isnt it :: or hmm nope would be if was like *::target? */
  /* html, body does seem to semi-work so whatever */
  scroll-padding-top: var(--header-height-current);
}

html, body {
  scroll-padding-top: var(--header-height-current);
}
html {
  height: 100%;
  position: relative;
  overflow-x: hidden; /* gotta be on both or doesnt work on iphone hmm */
  scroll-behavior: smooth; /* makes in-page links scroll to target beautifully in chrome */
  /* overscroll-behavior-y: none; /1* actually works in chrome, stops from overscroll. BUT makes scrolling and esp sticky jittery it seems? *1/ */
}

@keyframes fade-in-site {
  0% {
    opacity: 0%;
    transform: scaleX(0);
  } 100% { }
}

body {
  font-family: 'Open Sans', sans-serif;
  color: var(--fg-1);
  background-color: var(--bg-1);
  width: calc(100% - 2 * var(--space-edges));
  margin: auto;
}

#app {
  position: relative;
}

li {
  list-style: none;
}

a {
  color: var(--fg-2);
  text-decoration: none;
  touch-action: manipulation;

  &:visited {
    // color: var(--purple-2);
    text-emphasis: var(--purple);
    text-decoration: underline var(--purple) var(--line-width);

    * {
      // color: var(--purple-2);
      text-decoration: underline var(--purple) var(--line-width);
    }
  }

  div {
    &:focus, &:hover, &:active {
      transform: scale(1.10); // causing weird jumping if applied straight to a...
      filter: brightness(125%) 
              drop-shadow(0.2rem 0.2rem 0.1rem var(--bg-1)); // causing weird jumping
    }
  }
}

main { /* dunno purpose of why I choose .main-content... */
  width: 100%;
  min-height: 98vh;
  
  border-top: var(--line-width) solid var(--line-color); /* should make configurable. off looks p nice on main page */
  border-left:  var(--line-width-vert) solid var(--line-color); /* should make configurable. off looks p nice on main page */
  border-bottom:  var(--line-width-vert) solid var(--line-color); /* should make configurable. off looks p nice on main page */
  border-right: var(--line-width-vert) solid var(--line-color); /* should make configurable. off looks p nice on main page */
  margin-top: var(--space-lg);

  animation: fade-in 1.2s ease-in;
}
.main-content {
  position: relative;
  background: var(--gradient-bg-main);
  > section:first-of-type { /* top section: no upper border */
    border-top: 0;
  }
  > section:last-of-type { /* last section, no bottom border */
    margin-bottom: 0;
    z-index: 40;
  }
  
  &.animate {
    animation: fade-in-site 700ms;
  }
}
.main-loading {
  --line-width: 0px;
  --line-width-vert: 0px;
  // width: 100&;
  #intro {
    position: absolute;
    max-height: 100%;
    overflow: hidden;
    z-index: 0;
  }

  .media-as-bg {
    position: relative;
    margin-top: calc(0px - var(--space-lg)); // adjust for mystery offset lol
    z-index: initial;
  }
  .loading-container {
    z-index: 100;
  }
}
.main-error {
  max-height: unset;
  
  #intro {
    position: unset;
  }
  section {

    h1 {
      position: relative;
      top: 0;
      left: 0;
    }
    .h-intro {
      margin: -3em;
    }
  }
  .loading-container {
    // position: absolute;
  }
}

pre {
  // overflow: scroll;
  white-space: pre-wrap;
  background-color: var(--bg-1);
  color: var(--fg-2);
  padding: 0.25em;
  margin: 0.125em calc(0.5 * var(--space));
  border-top: var(--line-width-sm) solid var(--line-color);
}

p > code { /* single-word vars etc */
  background-color: var(--bg-2);
  font-weight: 500;
  color: var(--fg-6);
  padding: 0.125em 0.3em;
  border-radius: 0.2rem;
  border: 0.5px solid var(--bg-6);
}



section { /* one main section (img + header + piece of content) */
  max-width: 100%;
  flex: 1 1 auto;
  position: relative;
  justify-content: center;
  align-items: middle;
  padding:   var(--space-lg) var(--space-lg); /* for padding-less main: */
  border-top: var(--line-width) solid var(--line-color);
  
  h1 {
    text-align: center;

    &.h-responsive, &.h0-responsive {
      padding: var(--space) calc(0.5 * var(--space));
    }
  }
}

article { // use for blog posts and other stuff
}

aside { // use for text inserts and maybe sidebars

}


h1, h2, h3, h4, h5, h6 { font-weight: 600; } // slightly less than bold

section h1, article h1 { font-size: 2rem; } /* restore proper h1 from 1.5 bs */
.h0 { font-size: 2.5rem; }
.h0-responsive { font-size: calc(2.5rem + 8vw); } /* size based on viewport, with sensible min */
.h-responsive  { font-size: calc(1.5rem + 3vw); }
@supports(font-size: min(0px)) { /* can additionally set a maximum... */
  .h0-responsive { font-size: #{'min(6rem,   2.5rem + 8vw)'}; }
  .h-responsive {  font-size: #{'min(3.5rem, 1.5rem + 3vw)'}; }
}

h3::first-letter, // make more specific and original hardcore v for whatever links
span::first-letter,
p::first-letter {
  font-size: 1.075em;
  filter: brightness(107.5%);
  line-height: 1em;
}


.buttons {
  display: flex;
  justify-content: space-evenly;
}
button {
  --around: calc(0.4 * var(--space)) calc(0.4 * var(--space-lg));
  padding: var(--around);
  margin: var(--around);
  background: transparent;
  color: var(--fg-2);
  border: var(--line-width-md) solid var(--line-color);
  border-radius: 0.125rem;
  position: relative;
  cursor: pointer;
  outline: 1px transparent;
  transition: outline-color 0.25s, transform 0.25s, text-shadow 0.25s;
  touch-action: manipulation;

  &:hover, &:focus {
    border-radius: 0;
    // outline: 1.0px solid;
    transition: outline-color 0.2s;
    text-shadow: 1px 1px 3px var(--fg-3);
  }
  &:active {
    i {
      transition: transform 0.2s;
      transform: rotateZ(90deg);
    }
  }
  &:not(:active) {
    i {
      transition: transform 1.0s;
      transform: none;
    }
  }
  &:disabled {
    color: var(--fg-6);
    text-shadow: unset;
    opacity: 90%;
  }

  &.background {
    border-radius: 0.125rem;
    background: hsla(0, 5%, 100%, 0.05);
  }

  label {
    position: relative;
    font-size: 1.2rem;
    z-index: 2;
    cursor: pointer;
    white-space: nowrap;
  }
  i {
    font-size: 1.2em;
  }

  .btn-img {
    width: 1.5em;
    height: 1.5em;
  }
}

input {
  margin: 0 0.25em; /* just for checkboxes... */

  &[type="submit"] { // button
    &:disabled {
      color: var(--bg-6);
    }
  }
}

video {
  height: auto;
}

textarea, input {
  &:focus {
    outline: 0;
    border: 2px solid var(--fg-3); // well should be outline instead no so stuff doesnt move, but having issues at least when margin 0
  }
}
textarea, input, .form-control {
// textarea, .form-control {
  background: var(--bg-1);
  color: var(--fg-1);
  font-size: 1.2em;
  padding: 0.3em 0.5em;
  margin-bottom: 0.4em;
  border: 2px solid var(--bg-5);
}
textarea {
  font-size: 1em;
}
label {
  margin-left: 0.6em;
  margin-right: 0.6em;
}

mark {
  background-color: transparent;
  color: var(--purple);
  font-weight: 700;
  position: relative;
  z-index: 2;

  &:before {
    content: "";
    position: absolute;
    left: -0.225em;
    top: 0%;
    width: calc(100% + 0.4em);
    height: 100%;
    // background: linear-gradient(90deg, var(--bg-1), var(--bg-2-2));
    transform: skew(-7deg);
    // filter: brightness(85%) saturate(150%);
    border: 0.5px solid var(--fg-4);
    opacity: 50%;
    box-shadow: 0px 0px 3px 3px hsla(0, 20%, 70%, 0.15);

    z-index: 0; // sometimes hides it completely hmm.
  }
}

html { //kill main scrollbar. should rather implement custom tho...
  scrollbar-color: transparent transparent; /* thumb and track color */
  scrollbar-width: thin;
}
// * { -ms-overflow-style: none; }

@supports not (scrollbar-color: hotpink blue) { /* Only for engines w/o the standard prop */
  *::-webkit-scrollbar-thumb {
    background-color: transparent;
  }
  *::-webkit-scrollbar-track {
    background-color: transparent;
    border: none;
  }
}
